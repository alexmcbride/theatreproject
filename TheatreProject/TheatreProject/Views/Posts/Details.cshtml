@model TheatreProject.ViewModels.PostDetailsViewModel

@{
    ViewBag.Title = Model.Post.Title;
}

@section breadcrumb {
    @Html.ActionLink("Home", "index", "home") &raquo; 
    @Html.ActionLink("Blog", "index") &raquo; 
    @Html.ActionLink(Model.Post.Category.Name, "category", new { id=Model.Post.CategoryId }) &raquo; 
    @Model.Post.Title
}

@Html.DisplayFor(model => model.Post)

<h3><a name="comments">Comments.</a></h3>

@if (!User.Identity.IsAuthenticated)
{
    <div class="alert alert-warning">You must be @Html.ActionLink("logged in", "login", "account", new { returnUrl = Request.Url.PathAndQuery }, null) to leave a comment.</div>
}
else if (User.IsInRole("Suspended"))
{
    <div class="alert alert-danger">You have been suspeded from commenting</div>
}
else if (!Model.Post.IsApproved)
{
    <div class="alert alert-danger">You cannot comment on a post that is not approved</div>
}
else
{
    <div class="text-muted">Leave a comment using the form below.</div>

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", rows = "5" } })
                    @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Comment" class="btn btn-default">
                </div>
            </div>
        </div>
    }
}

@Html.DisplayFor(m => m.Comments)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}